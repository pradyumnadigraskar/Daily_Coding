Q. (Leet Code54) Spiral Matrix

Given an m x n matrix, return all elements of the matrix in spiral order.

Example 1:


Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]
Example 2:


Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Solution:-

class Solution(object):
    def spiralOrder(self, matrix):


        a=len(matrix)
        b=len(matrix[0])
        mat2=[]

        top=0
        bottom=a-1
        left=0
        right=b-1

        while left <=right and top <= bottom:

            for j in range(left,right+1):
    
                mat2.append(matrix[top][j])
            top+=1

            for i in range(top,bottom + 1):
                mat2.append(matrix[i][right])
            right-=1

            if top <= bottom:

                for k in range(right,left-1,-1):
                    mat2.append(matrix[bottom][k])
            bottom-=1

            if left <= right:

                for l in range(bottom,top-1,-1):
                    mat2.append(matrix[l][left])
                    
            left+=1

  
        return mat2









        
